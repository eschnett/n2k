# Note: I recommend compiling with 'make -j' (since many template instantiations are compiled)
# Note: 'make one' will compile a single template instantiation (to avoid the full 'make -j' deluge)

GPUTILS_INCDIR=../gputils/include
GPUTILS_LIBDIR=../gputils/lib

# FIXME hardcoded -arch=sm_86 here. What is best practice?
NVCC=nvcc -std=c++17 -arch=sm_86 -m64 -O3 -I$(GPUTILS_INCDIR) --compiler-options -Wall
SHELL := /bin/bash

.DEFAULT_GOAL: all
.PHONY: all one asm clean .FORCE

HFILES = \
  n2k.hpp \
  n2k_kernel.hpp

# Kernel filename syntax is kernel_{nstations}_{nfreq}.o
OFILES = \
  Correlator.o \
  kernel_table.o \
  precompute_offsets.o \
  template_instantiations/kernel_128_1.o \
  template_instantiations/kernel_128_2.o \
  template_instantiations/kernel_128_4.o \
  template_instantiations/kernel_128_8.o \
  template_instantiations/kernel_128_16.o \
  template_instantiations/kernel_128_32.o \
  template_instantiations/kernel_128_64.o \
  template_instantiations/kernel_128_128.o \
  template_instantiations/kernel_128_256.o \
  template_instantiations/kernel_128_512.o \
  template_instantiations/kernel_128_1024.o \
  template_instantiations/kernel_1024_1.o \
  template_instantiations/kernel_1024_2.o \
  template_instantiations/kernel_1024_4.o \
  template_instantiations/kernel_1024_8.o \
  template_instantiations/kernel_1024_16.o \
  template_instantiations/kernel_1024_32.o \
  template_instantiations/kernel_1024_64.o \
  template_instantiations/kernel_1024_128.o

# "Special" kernel, used in special targets 'make one' and 'make asm'.
SPKERN = 1024_16

XFILES = \
  test-correlator \
  time-correlator \
  scratch

SRCDIRS = . template_instantiations

all: $(XFILES)

# Compile only the "special" kernel. Useful when debugging, to avoid the 'make -j all' deluge.
one: template_instantiations/kernel_$(SPKERN).o

# Generate ptx and sass for the "special" kernel.
asm: template_instantiations/kernel_$(SPKERN).ptx template_instantiations/kernel_$(SPKERN).sass

# Not part of 'make all', needs explicit 'make source_files.txt'
source_files.txt: .FORCE
	rm -f source_files.txt
	shopt -s nullglob && for d in $(SRCDIRS); do for f in $$d/*.cu $$d/*.hpp $$d/*.cuh; do echo $$f; done; done >$@

clean:
	rm -f $(XFILES) source_files.txt *~ template_instantiations/*.cu
	shopt -s nullglob && for d in $(SRCDIRS); do rm -f $$d/*~ $$d/*.o $$d/*.ptx $$d/*.sass; done

%.o: %.cu $(HFILES)
	$(NVCC) -c -o $@ $<

%.ptx: %.o
	cuobjdump -ptx $< > $@

%.sass: %.o
	cuobjdump -sass $< > $@

template_instantiations/kernel_%.cu: template_instantiations/make-instantiation.py
	$< $@

test-correlator: test-correlator.o $(OFILES) $(GPUTILS_LIBDIR)/libgputils.a
	$(NVCC) -o $@ $^

time-correlator: time-correlator.o $(OFILES) $(GPUTILS_LIBDIR)/libgputils.a
	$(NVCC) -o $@ $^

scratch: scratch.o $(OFILES) $(GPUTILS_LIBDIR)/libgputils.a
	$(NVCC) -o $@ $^

# I prefer not to have make autodelete its autogenerated source files
.PRECIOUS: template_instantiations/kernel_%.cu
